/**
 * Crossborder
 * MasterCard Cross-Border Services enables banks in their capacity as Originating Institutions to send cross-border payments for various payment types including person-to-person payments (P2P), person-to-business payments (P2B), business-to-person disbursements (B2P), business-to-business payments (B2B), and government-to-person disbursement (G2P). Mastercard Cross-Border Services supports a variety of payout options, including bank accounts, mobile money accounts, consumer cards, and retail cash pick-up.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdditionalDataList from './AdditionalDataList';

/**
 * The CancelPayment model module.
 * @module model/CancelPayment
 * @version 1.0.0
 */
class CancelPayment {
    /**
     * Constructs a new <code>CancelPayment</code>.
     * Response details
     * @alias module:model/CancelPayment
     */
    constructor() { 
        
        CancelPayment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CancelPayment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CancelPayment} obj Optional instance to populate.
     * @return {module:model/CancelPayment} The populated <code>CancelPayment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CancelPayment();

            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('additional_data_list')) {
                obj['additional_data_list'] = AdditionalDataList.constructFromObject(data['additional_data_list']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CancelPayment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CancelPayment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `additional_data_list`
        if (data['additional_data_list']) { // data not null
          AdditionalDataList.validateJSON(data['additional_data_list']);
        }

        return true;
    }


}



/**
 * Status of the cancel request for payment. Details- string, 1-30
 * @member {String} status
 */
CancelPayment.prototype['status'] = undefined;

/**
 * @member {module:model/AdditionalDataList} additional_data_list
 */
CancelPayment.prototype['additional_data_list'] = undefined;






export default CancelPayment;

