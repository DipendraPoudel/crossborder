/**
 * Crossborder
 * MasterCard Cross-Border Services enables banks in their capacity as Originating Institutions to send cross-border payments for various payment types including person-to-person payments (P2P), person-to-business payments (P2B), business-to-person disbursements (B2P), business-to-business payments (B2B), and government-to-person disbursement (G2P). Mastercard Cross-Border Services supports a variety of payout options, including bank accounts, mobile money accounts, consumer cards, and retail cash pick-up.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReturnStatus model module.
 * @module model/ReturnStatus
 * @version 1.0.0
 */
class ReturnStatus {
    /**
     * Constructs a new <code>ReturnStatus</code>.
     * Object representing the RETURN
     * @alias module:model/ReturnStatus
     */
    constructor() { 
        
        ReturnStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReturnStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReturnStatus} obj Optional instance to populate.
     * @return {module:model/ReturnStatus} The populated <code>ReturnStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReturnStatus();

            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReturnStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReturnStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Message'] && !(typeof data['Message'] === 'string' || data['Message'] instanceof String)) {
            throw new Error("Expected the field `Message` to be a primitive type in the JSON string but got " + data['Message']);
        }

        return true;
    }


}



/**
 * This field will only be provided when a transaction is returned to OI. The Field contains English representation of why the transaction is being returned. One of the values below can be provided:  Returned Per Sending service provider's request.  Beneficiary account is not valid or unable to locate account.  Beneficiary account is inactive.  Beneficiary name does not match account.  Invalid account type.  Credit refused by beneficiary.  Unspecified reason.
 * @member {String} Message
 */
ReturnStatus.prototype['Message'] = undefined;






export default ReturnStatus;

