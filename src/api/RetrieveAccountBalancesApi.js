/**
 * Crossborder
 * MasterCard Cross-Border Services enables banks in their capacity as Originating Institutions to send cross-border payments for various payment types including person-to-person payments (P2P), person-to-business payments (P2B), business-to-person disbursements (B2P), business-to-business payments (B2B), and government-to-person disbursement (G2P). Mastercard Cross-Border Services supports a variety of payout options, including bank accounts, mobile money accounts, consumer cards, and retail cash pick-up.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Account from '../model/Account';

/**
* RetrieveAccountBalances service.
* @module api/RetrieveAccountBalancesApi
* @version 1.0.0
*/
export default class RetrieveAccountBalancesApi {

    /**
    * Constructs a new RetrieveAccountBalancesApi. 
    * @alias module:api/RetrieveAccountBalancesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAllAccountBalances operation.
     * @callback module:api/RetrieveAccountBalancesApi~getAllAccountBalancesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Account>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This resource is used to retrieve all prefunded accounts associated with the provided Partner Id, with an option to pull back their associated balances.
     * This API requires only partner_id to retrieve all the accounts and their respective balances. This API will provide balances information only when include_balance parameter is passed as true. This will fetch openingBalance, processedAmount, availableBalance, reservedBalance, settlementAccountBalance and thresholdAmount if any configured.
     * @param {String} partnerId It holds a string of alphanumeric special characters with a length of up to 35. This should be valid value and provided by user.
     * @param {Object} opts Optional parameters
     * @param {String} opts.includeBalance If include_balance = true, the responses will include Account details along with balance details. If include_balance = false, balance details will be omitted and only account details will be returned. (default to 'false')
     * @param {module:api/RetrieveAccountBalancesApi~getAllAccountBalancesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Account>}
     */
    getAllAccountBalances(partnerId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'partnerId' is set
      if (partnerId === undefined || partnerId === null) {
        throw new Error("Missing the required parameter 'partnerId' when calling getAllAccountBalances");
      }

      let pathParams = {
        'partner_id': partnerId
      };
      let queryParams = {
        'include_balance': opts['includeBalance']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Account];
      return this.apiClient.callApi(
        '/send/partners/{partner_id}/crossborder/accounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
